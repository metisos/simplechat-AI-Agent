import React, { useState } from "react";
import axios from "axios";

const OPENAI_API_URL = "https://api.openai.com/v1/chat/completions";
const API_KEY = "Your_OPENAI_APIKEY";

const SimpleChat: React.FC = () => {
  const [message, setMessage] = useState("");
  const [response, setResponse] = useState("");
  const [loading, setLoading] = useState(false);
  const [messages, setMessages] = useState<{ role: string; content: string }[]>(
    []
  );

  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    setMessage(e.target.value);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      const payload = {
        model: "gpt-4o",
        messages: [
          {
            role: "system",
            content:
              "You are a simple chat bot, answering user questions.",
          },
          ...messages,
          {
            role: "user",
            content: message,
          },
        ],
      };

      const res = await axios.post(OPENAI_API_URL, payload, {
        headers: {
          Authorization: `Bearer ${API_KEY}`,
          "Content-Type": "application/json",
        },
      });

      if (res.status === 200 && res.data.choices) {
        const textResponse = res.data.choices[0].message.content.trim();
        setResponse(textResponse);

        setMessages((prevMessages) => [
          ...prevMessages,
          { role: "user", content: message },
          { role: "assistant", content: textResponse },
        ]);

        setMessage("");
      }
    } catch (error) {
      console.error(error);
    } finally {
      setLoading(false);
    }
  };

  const clearFields = () => {
    setMessage("");
    setResponse("");
  };

  const clearMemory = () => {
    setMessages([]);
  };

  return (
    <div className="max-w-md h-96 overflow-auto p-2 bg-black border-gray-300 border shadow">
      <h1 className="text-2xl font-bold text-white mb-4">Ask Metis</h1>
      <form onSubmit={handleSubmit}>
        <div className="overflow-y-auto max-h-50 mb-2">
          <textarea
            className="border border-black rounded p-2 mb-2 w-full text-black"
            value={message}
            onChange={handleInputChange}
            placeholder="Ask Metis"
            rows={4}
          />
        </div>
        <div className="flex mb-2">
          <button
            className="bg-primary text-white font-bold py-2 px-4 rounded-lg bg-gray-500"
            type="submit"
          >
            Send
          </button>
        </div>
        <div className="border-rounded mt-4">
          <div className="text-white h-[300px] overflow-y-auto border">
            {loading ? (
              <div className="flex justify-center items-center mb-4 border border-gray-300 rounded p-2 overflow">
                Loading...
              </div>
            ) : (
              <div className="text-white text-lg">{response}</div>
            )}
          </div>
          <button
            type="button"
            onClick={clearFields}
            className="mt-2 p-2 bg-red-500 text-white"
          >
            Clear Fields
          </button>
          <button
            type="button"
            onClick={clearMemory}
            className="mt-2 p-2 ml-2 bg-blue-500 text-white"
          >
            Clear Memory
          </button>
        </div>
      </form>
    </div>
  );
};

export default SimpleChat;
